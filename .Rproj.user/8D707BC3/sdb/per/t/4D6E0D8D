{
    "contents" : "# This sciprt file contains a frame for learning handwritten digitals from the MNIST dataset\n\nlibrary(\"pROC\")\nsource(\"load_data.R\")\nsource(\"learnModel.R\")\nsource(\"lrCostFunction.R\")\nsource(\"grlrCostfunction.R\")\nsource(\"testModel.R\")\nsource(\"metrics.R\")\nsource(\"GradientDescent.R\")\nsource(\"GSS.R\")\n# load training data from files\ndata <- loadMNISTData(\"C:\\\\Users\\\\Gennadij\\\\Documents\\\\GitHub\\\\LearnMNIST\\\\train-images.idx3-ubyte\", \"C:\\\\Users\\\\Gennadij\\\\Documents\\\\GitHub\\\\LearnMNIST\\\\train-labels.idx1-ubyte\")\ntrainLabels <- data$labels\ntrainData <- data$data\n\nprint(dim(trainData))\nprint(dim(trainLabels))\n# trainingData should be 60000x786,  60000 data and 784 features (28x28), tha matrix trainData has 60000 rows and 784 columns\n# trainingLabels should have 60000x1, one class label \\in {0,1,...9} for each data.\n\n#uncomment the following 3 lines to see the nth training example and its class label.\n# n = 10;\n# image( t(matrix(trainData[n, ], ncol=28, nrow=28)), Rowv=28, Colv=28, col = heat.colors(256),  margins=c(5,10))\n# print(\"Class label:\"); print(trainLabels[n])\n\n# \n\n# train a model (about 35 min on my laptop)\nclassifier <- learnModel(data = trainData, labels = trainLabels)\n\npredictedLabels <- testModel(classifier, trainData)\n\n#calculate accuracy on training data\nprint(\"accuracy on training data:\\t\")\nprint(sum(predictedLabels == trainLabels)/length(trainLabels)) #accuracy=0.8535\n\n#calculate the following error metric for each class obtained on the train data:\n#Recall, precision, specificity, F-measure, FDR and ROC for each class separately. Use a package for ROC. \nmetrics(predictedLabels,trainLabels)\n\n# test the model\ndata <- loadMNISTData(\"C:\\\\Users\\\\Gennadij\\\\Documents\\\\GitHub\\\\LearnMNIST\\\\t10k-images.idx3-ubyte\", \"C:\\\\Users\\\\Gennadij\\\\Documents\\\\GitHub\\\\LearnMNIST\\\\t10k-labels.idx1-ubyte\")\ntestLabels <- data$labels\ntestData <- data$data\n\nprint(dim(testData))\nprint(dim(testLabels))\n#trainingData should be 10000x786,  10000 data and 784 features (28x28), tha matrix trainData has 10000 rows and 784 columns\n#trainingLabels should have 10000x1, one class label \\in {0,1,...9} for each data.\n\npredictedLabels <- testModel(classifier, testData)\n\n#calculate accuracy\nprint(\"accuracy on test data:\\t\")\nprint(sum(predictedLabels == testLabels)/length(testLabels))#accuracy=0.8615\n\n#calculate the following error metric for each class obtained on the test data:\n#Recall, precision, specificity, F-measure, FDR and ROC for each class separately. Use a package for ROC. \nmetrics(predictedLabels,testLabels)",
    "created" : 1450723495438.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4007866155",
    "id" : "4D6E0D8D",
    "lastKnownWriteTime" : 1450726193,
    "path" : "~/GitHub/LearnMNIST/ClassificationMain.R",
    "project_path" : "ClassificationMain.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}